package com.educareapps.quiz.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.educareapps.quiz.dao.UserTable;
import com.educareapps.quiz.dao.LanguageTable;
import com.educareapps.quiz.dao.QuestionSetTable;
import com.educareapps.quiz.dao.CSVQuestionTable;
import com.educareapps.quiz.dao.TestTable;
import com.educareapps.quiz.dao.LeaderBoardTable;

import com.educareapps.quiz.dao.UserTableDao;
import com.educareapps.quiz.dao.LanguageTableDao;
import com.educareapps.quiz.dao.QuestionSetTableDao;
import com.educareapps.quiz.dao.CSVQuestionTableDao;
import com.educareapps.quiz.dao.TestTableDao;
import com.educareapps.quiz.dao.LeaderBoardTableDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userTableDaoConfig;
    private final DaoConfig languageTableDaoConfig;
    private final DaoConfig questionSetTableDaoConfig;
    private final DaoConfig cSVQuestionTableDaoConfig;
    private final DaoConfig testTableDaoConfig;
    private final DaoConfig leaderBoardTableDaoConfig;

    private final UserTableDao userTableDao;
    private final LanguageTableDao languageTableDao;
    private final QuestionSetTableDao questionSetTableDao;
    private final CSVQuestionTableDao cSVQuestionTableDao;
    private final TestTableDao testTableDao;
    private final LeaderBoardTableDao leaderBoardTableDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userTableDaoConfig = daoConfigMap.get(UserTableDao.class).clone();
        userTableDaoConfig.initIdentityScope(type);

        languageTableDaoConfig = daoConfigMap.get(LanguageTableDao.class).clone();
        languageTableDaoConfig.initIdentityScope(type);

        questionSetTableDaoConfig = daoConfigMap.get(QuestionSetTableDao.class).clone();
        questionSetTableDaoConfig.initIdentityScope(type);

        cSVQuestionTableDaoConfig = daoConfigMap.get(CSVQuestionTableDao.class).clone();
        cSVQuestionTableDaoConfig.initIdentityScope(type);

        testTableDaoConfig = daoConfigMap.get(TestTableDao.class).clone();
        testTableDaoConfig.initIdentityScope(type);

        leaderBoardTableDaoConfig = daoConfigMap.get(LeaderBoardTableDao.class).clone();
        leaderBoardTableDaoConfig.initIdentityScope(type);

        userTableDao = new UserTableDao(userTableDaoConfig, this);
        languageTableDao = new LanguageTableDao(languageTableDaoConfig, this);
        questionSetTableDao = new QuestionSetTableDao(questionSetTableDaoConfig, this);
        cSVQuestionTableDao = new CSVQuestionTableDao(cSVQuestionTableDaoConfig, this);
        testTableDao = new TestTableDao(testTableDaoConfig, this);
        leaderBoardTableDao = new LeaderBoardTableDao(leaderBoardTableDaoConfig, this);

        registerDao(UserTable.class, userTableDao);
        registerDao(LanguageTable.class, languageTableDao);
        registerDao(QuestionSetTable.class, questionSetTableDao);
        registerDao(CSVQuestionTable.class, cSVQuestionTableDao);
        registerDao(TestTable.class, testTableDao);
        registerDao(LeaderBoardTable.class, leaderBoardTableDao);
    }
    
    public void clear() {
        userTableDaoConfig.getIdentityScope().clear();
        languageTableDaoConfig.getIdentityScope().clear();
        questionSetTableDaoConfig.getIdentityScope().clear();
        cSVQuestionTableDaoConfig.getIdentityScope().clear();
        testTableDaoConfig.getIdentityScope().clear();
        leaderBoardTableDaoConfig.getIdentityScope().clear();
    }

    public UserTableDao getUserTableDao() {
        return userTableDao;
    }

    public LanguageTableDao getLanguageTableDao() {
        return languageTableDao;
    }

    public QuestionSetTableDao getQuestionSetTableDao() {
        return questionSetTableDao;
    }

    public CSVQuestionTableDao getCSVQuestionTableDao() {
        return cSVQuestionTableDao;
    }

    public TestTableDao getTestTableDao() {
        return testTableDao;
    }

    public LeaderBoardTableDao getLeaderBoardTableDao() {
        return leaderBoardTableDao;
    }

}
