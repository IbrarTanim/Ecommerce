package com.educareapps.quiz.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.educareapps.quiz.dao.LanguageTable;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LANGUAGE_TABLE".
*/
public class LanguageTableDao extends AbstractDao<LanguageTable, Long> {

    public static final String TABLENAME = "LANGUAGE_TABLE";

    /**
     * Properties of entity LanguageTable.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Lang_id = new Property(1, long.class, "lang_id", false, "LANG_ID");
        public final static Property Lang_name = new Property(2, String.class, "lang_name", false, "LANG_NAME");
        public final static Property Status = new Property(3, String.class, "status", false, "STATUS");
        public final static Property Created_at = new Property(4, String.class, "created_at", false, "CREATED_AT");
    };

    private DaoSession daoSession;


    public LanguageTableDao(DaoConfig config) {
        super(config);
    }
    
    public LanguageTableDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LANGUAGE_TABLE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"LANG_ID\" INTEGER NOT NULL ," + // 1: lang_id
                "\"LANG_NAME\" TEXT NOT NULL ," + // 2: lang_name
                "\"STATUS\" TEXT," + // 3: status
                "\"CREATED_AT\" TEXT NOT NULL );"); // 4: created_at
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LANGUAGE_TABLE\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LanguageTable entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getLang_id());
        stmt.bindString(3, entity.getLang_name());
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(4, status);
        }
        stmt.bindString(5, entity.getCreated_at());
    }

    @Override
    protected void attachEntity(LanguageTable entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LanguageTable readEntity(Cursor cursor, int offset) {
        LanguageTable entity = new LanguageTable( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getLong(offset + 1), // lang_id
            cursor.getString(offset + 2), // lang_name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // status
            cursor.getString(offset + 4) // created_at
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LanguageTable entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLang_id(cursor.getLong(offset + 1));
        entity.setLang_name(cursor.getString(offset + 2));
        entity.setStatus(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCreated_at(cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(LanguageTable entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(LanguageTable entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
